\documentclass{article}
\usepackage{geometry}
\geometry{verbose, tmargin=2.5cm, bmargin=2.5cm, lmargin=2.5cm, rmargin=2.5cm}
\begin{document}

\title{}
\author{}
\maketitle

<<highlight, echo=FALSE>>=
knit_theme$set(knit_theme$get('solarized-dark'))
@

<<knitr_setup, echo=FALSE>>=
opts_chunk$set(cache=FALSE, eval=FALSE, tidy=TRUE, message=FALSE, warning=FALSE)
read_chunk("../../code/rpm.R")
@

\subsubsection{genNavbar}

\texttt{genNavbar} generates a navigation bar for a web page.
The html file created is generally written to the project's \texttt{docs/Rmd/include} directory.
However, if this function is used to create a navbar for a Github user web page, the html file should be stored in a sensible location inside the user pages repository, e.g., \texttt{leonawicz.github.io/assets}.

The common navigation bar html is included at the beginning of the body of the html for each web page in the project's website.
\texttt{menu} is a vector of names for each dropdown menu.
\texttt{submenus} is a list of vectors of menu options corresponding to each menu.
\texttt{files} is a similar list of vectors.
Each element is either an html file for a web page to be associated with the submenu link,
"header" to indicate the corresponding name in \texttt{submenus} is only a group label and not a link to a web page,
or "divider" to indicate placement of a bar for separating groups in a dropdown menu.

\texttt{theme} can be either \texttt{united} (default) or \texttt{cyborg}.
Both are from Bootswatch.
The function must apply some internal differentiation in the construction of the html navigation bar between themes.
This is currently the only \texttt{rpm} function which attempts to handle multiple Bootswatch themes with different CSS tags.

<<fun_genNavbar>>=
@

\subsubsection{genOutyaml}

\texttt{genOutyaml} generates the \texttt{\_out.yaml} file for yaml front-matter common to all html files in the project website.
The file should be written to the project's \texttt{docs/Rmd} directory.
\texttt{lib} specifies the library directory for any associated files.
yaml \texttt{includes} for external html common to all project web pages in the site can also be specified with \texttt{header}, \texttt{before\_body}, and \texttt{after\_body}.
These can be specified by file basename only (no path) and the function assumes these files are in the \texttt{docs/Rmd/include} directory.
At this time all external libraries must be provided by the user, for example in \texttt{docs/Rmd/libs}.
It is recommended. See the project repo [gh-pages](https://github.com/leonawicz/ProjectManagement/tree/gh-pages "gh-pages") branch for an example.

<<fun_genOutyaml>>=
@

\end{document}
